// <auto-generated />
using System;
using AdminPacientes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminPacientes.Migrations
{
    [DbContext(typeof(AdminContexto))]
    [Migration("20190516232339_segunda")]
    partial class segunda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminPacientes.Models.Domicilio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("CodigoPostal");

                    b.Property<string>("Dpto");

                    b.Property<string>("Localidad")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<int>("Numero");

                    b.Property<int>("PersonaId");

                    b.Property<int>("Piso");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("AdminPacientes.Models.ObraSocial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Direccion")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<decimal>("Telefono")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.HasKey("Id");

                    b.ToTable("ObraSociales");
                });

            modelBuilder.Entity("AdminPacientes.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<int>("Dni");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("FechaNacimiento");

                    b.Property<string>("Nacionalidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Sexo");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("AdminPacientes.Models.Registro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaAtencion");

                    b.Property<int>("PacienteId");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("AdminPacientes.Models.Paciente", b =>
                {
                    b.HasBaseType("AdminPacientes.Models.Persona");

                    b.Property<DateTime>("FechaAlta");

                    b.Property<DateTime>("FechaBaja");

                    b.Property<int>("NumeroAfiliado");

                    b.Property<int>("ObraSocialId");

                    b.HasIndex("ObraSocialId");

                    b.ToTable("Paciente");

                    b.HasDiscriminator().HasValue("Paciente");
                });

            modelBuilder.Entity("AdminPacientes.Models.Tutor", b =>
                {
                    b.HasBaseType("AdminPacientes.Models.Persona");

                    b.Property<int>("EstadoCivil");

                    b.Property<string>("Ocupacion");

                    b.Property<int>("PacienteId");

                    b.Property<string>("Parentezco")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<decimal>("Telefono")
                        .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 20, scale: 0)));

                    b.HasIndex("PacienteId");

                    b.ToTable("Tutor");

                    b.HasDiscriminator().HasValue("Tutor");
                });

            modelBuilder.Entity("AdminPacientes.Models.Domicilio", b =>
                {
                    b.HasOne("AdminPacientes.Models.Persona", "Personas")
                        .WithMany("Domicilios")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPacientes.Models.Registro", b =>
                {
                    b.HasOne("AdminPacientes.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPacientes.Models.Paciente", b =>
                {
                    b.HasOne("AdminPacientes.Models.ObraSocial", "ObraSociales")
                        .WithMany("Pacientes")
                        .HasForeignKey("ObraSocialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminPacientes.Models.Tutor", b =>
                {
                    b.HasOne("AdminPacientes.Models.Paciente", "Pacientes")
                        .WithMany("Tutores")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
